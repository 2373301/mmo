namespace = p;

// 向 data server 请求数据
xs2ds_entity_req
{
	uint64		owner_guid;		// 消息的主人
	uint64		req_guid;		// 请求的guid
	uint8		req_type;		// 请求类型
	list<uint8>	data;			// 待存储的data
}
// req_type
// 1:create		请求创建entity
// 2:load		获取entity, cache中如果不存在此entity, 则从db加载
// 3:flush		通知cache此entity已经不需要了,保存进db
// 4:query		查询entity, 如果cache不存在此entity, 则返回null
// 5:update		更新entity
// 6:remove		销毁entity, 如果实体在db中则从db中删除
// 7:one-off	只从db加载entity , 不进入cache
// 8:create_flush 创建entity并保存进db,不进入cache
// 9:delete		仅仅删除 cache中的entity, 下次从db中加载

// data server 返回的结果
ds2xs_entity_ack
{
	uint64		owner_guid;		// 消息的主人
	uint64		req_guid;		// 请求的guid
	uint8		req_type;		// 请求类型
	uint8		result;			// 结果 0: 正常, 1:实体没有找到, 2:实体已存在, 3:实体被锁定,104:协议不正确, 105: data 内部错误
	list<uint8>	data;			// 返回的data
}